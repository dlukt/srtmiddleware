// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v6.30.0
// source: stats.proto

package stats

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StatsClient is the client API for Stats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StatsClient interface {
	GetBytesAverage(ctx context.Context, in *Request, opts ...grpc.CallOption) (Stats_GetBytesAverageClient, error)
}

type statsClient struct {
	cc grpc.ClientConnInterface
}

func NewStatsClient(cc grpc.ClientConnInterface) StatsClient {
	return &statsClient{cc}
}

func (c *statsClient) GetBytesAverage(ctx context.Context, in *Request, opts ...grpc.CallOption) (Stats_GetBytesAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &Stats_ServiceDesc.Streams[0], "/stats.Stats/GetBytesAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &statsGetBytesAverageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stats_GetBytesAverageClient interface {
	Recv() (*BytesAverage, error)
	grpc.ClientStream
}

type statsGetBytesAverageClient struct {
	grpc.ClientStream
}

func (x *statsGetBytesAverageClient) Recv() (*BytesAverage, error) {
	m := new(BytesAverage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatsServer is the server API for Stats service.
// All implementations must embed UnimplementedStatsServer
// for forward compatibility
type StatsServer interface {
	GetBytesAverage(*Request, Stats_GetBytesAverageServer) error
	mustEmbedUnimplementedStatsServer()
}

// UnimplementedStatsServer must be embedded to have forward compatible implementations.
type UnimplementedStatsServer struct {
}

func (UnimplementedStatsServer) GetBytesAverage(*Request, Stats_GetBytesAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBytesAverage not implemented")
}
func (UnimplementedStatsServer) mustEmbedUnimplementedStatsServer() {}

// UnsafeStatsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StatsServer will
// result in compilation errors.
type UnsafeStatsServer interface {
	mustEmbedUnimplementedStatsServer()
}

func RegisterStatsServer(s grpc.ServiceRegistrar, srv StatsServer) {
	s.RegisterService(&Stats_ServiceDesc, srv)
}

func _Stats_GetBytesAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StatsServer).GetBytesAverage(m, &statsGetBytesAverageServer{stream})
}

type Stats_GetBytesAverageServer interface {
	Send(*BytesAverage) error
	grpc.ServerStream
}

type statsGetBytesAverageServer struct {
	grpc.ServerStream
}

func (x *statsGetBytesAverageServer) Send(m *BytesAverage) error {
	return x.ServerStream.SendMsg(m)
}

// Stats_ServiceDesc is the grpc.ServiceDesc for Stats service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Stats_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "stats.Stats",
	HandlerType: (*StatsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetBytesAverage",
			Handler:       _Stats_GetBytesAverage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stats.proto",
}
